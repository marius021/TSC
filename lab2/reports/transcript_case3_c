# 1
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 08:55:19 on Apr 10,2024
# vlog -sv -timescale 1ps/1ps -work work -f sources.txt 
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling module instr_register_test
# ** Warning: ../lab01_testbench-interface/instr_register_test.sv(103): (vlog-2240) Treating stand-alone use of function 'final_report' as an implicit VOID cast.
# ** Warning: ../lab01_testbench-interface/instr_register_test.sv(110): (vlog-2250) Function "final_report" has no return value assignment.
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 08:55:19 on Apr 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
# vsim -novopt -quiet -nocoverage "+notimingchecks" "+nowarnTSCALE" -sva top -GTEST_NAME=case3_c -GWR_NR=50 -GSEED_VALUE=192158 -GRD_NR=32 -GWRITE_ORDER=2 -GREAD_ORDER=2 
# Start time: 08:55:19 on Apr 10,2024
# 
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Reseting the instruction register...
# 
# Writing values to register stack...
# Writing to register location 0: 
#   opcode = 6 (DIV)
#   operand_a = -2
#   operand_b = 1
# 
# Writing to register location 1: 
#   opcode = 1 (PASSA)
#   operand_a = 1
#   operand_b = 14
# 
# Writing to register location 2: 
#   opcode = 7 (MOD)
#   operand_a = -2
#   operand_b = 1
# 
# Writing to register location 3: 
#   opcode = 2 (PASSB)
#   operand_a = -15
#   operand_b = 15
# 
# Writing to register location 4: 
#   opcode = 7 (MOD)
#   operand_a = -1
#   operand_b = 2
# 
# Writing to register location 5: 
#   opcode = 5 (MULT)
#   operand_a = 2
#   operand_b = 7
# 
# Writing to register location 6: 
#   opcode = 3 (ADD)
#   operand_a = -9
#   operand_b = 13
# 
# Writing to register location 7: 
#   opcode = 6 (DIV)
#   operand_a = -3
#   operand_b = 3
# 
# Writing to register location 8: 
#   opcode = 1 (PASSA)
#   operand_a = 3
#   operand_b = 14
# 
# Writing to register location 9: 
#   opcode = 2 (PASSB)
#   operand_a = 14
#   operand_b = 9
# 
# Writing to register location 10: 
#   opcode = 2 (PASSB)
#   operand_a = 9
#   operand_b = 10
# 
# Writing to register location 11: 
#   opcode = 6 (DIV)
#   operand_a = -6
#   operand_b = 10
# 
# Writing to register location 12: 
#   opcode = 1 (PASSA)
#   operand_a = 10
#   operand_b = 6
# 
# Writing to register location 13: 
#   opcode = 1 (PASSA)
#   operand_a = -10
#   operand_b = 9
# 
# Writing to register location 14: 
#   opcode = 0 (ZERO)
#   operand_a = 9
#   operand_b = 9
# 
# Writing to register location 15: 
#   opcode = 1 (PASSA)
#   operand_a = -7
#   operand_b = 0
# 
# Writing to register location 16: 
#   opcode = 7 (MOD)
#   operand_a = 0
#   operand_b = 1
# 
# Writing to register location 17: 
#   opcode = 7 (MOD)
#   operand_a = 1
#   operand_b = 7
# 
# Writing to register location 18: 
#   opcode = 5 (MULT)
#   operand_a = -9
#   operand_b = 7
# 
# Writing to register location 19: 
#   opcode = 4 (SUB)
#   operand_a = -9
#   operand_b = 5
# 
# Writing to register location 20: 
#   opcode = 3 (ADD)
#   operand_a = 5
#   operand_b = 12
# 
# Writing to register location 21: 
#   opcode = 3 (ADD)
#   operand_a = 12
#   operand_b = 3
# 
# Writing to register location 22: 
#   opcode = 6 (DIV)
#   operand_a = -13
#   operand_b = 3
# 
# Writing to register location 23: 
#   opcode = 3 (ADD)
#   operand_a = -13
#   operand_b = 14
# 
# Writing to register location 24: 
#   opcode = 5 (MULT)
#   operand_a = 14
#   operand_b = 11
# 
# Writing to register location 25: 
#   opcode = 5 (MULT)
#   operand_a = 11
#   operand_b = 13
# 
# Writing to register location 26: 
#   opcode = 7 (MOD)
#   operand_a = -3
#   operand_b = 13
# 
# Writing to register location 27: 
#   opcode = 4 (SUB)
#   operand_a = -3
#   operand_b = 7
# 
# Writing to register location 28: 
#   opcode = 0 (ZERO)
#   operand_a = -9
#   operand_b = 12
# 
# Writing to register location 29: 
#   opcode = 2 (PASSB)
#   operand_a = 12
#   operand_b = 8
# 
# Writing to register location 30: 
#   opcode = 5 (MULT)
#   operand_a = -8
#   operand_b = 10
# 
# Writing to register location 31: 
#   opcode = 6 (DIV)
#   operand_a = 10
#   operand_b = 13
# 
# Writing to register location 0: 
#   opcode = 2 (PASSB)
#   operand_a = -3
#   operand_b = 14
# 
# Writing to register location 1: 
#   opcode = 3 (ADD)
#   operand_a = -2
#   operand_b = 2
# 
# Writing to register location 2: 
#   opcode = 6 (DIV)
#   operand_a = -14
#   operand_b = 11
# 
# Writing to register location 3: 
#   opcode = 4 (SUB)
#   operand_a = -5
#   operand_b = 6
# 
# Writing to register location 4: 
#   opcode = 7 (MOD)
#   operand_a = 6
#   operand_b = 4
# 
# Writing to register location 5: 
#   opcode = 0 (ZERO)
#   operand_a = 4
#   operand_b = 7
# 
# Writing to register location 6: 
#   opcode = 6 (DIV)
#   operand_a = 7
#   operand_b = 8
# 
# Writing to register location 7: 
#   opcode = 5 (MULT)
#   operand_a = 8
#   operand_b = 14
# 
# Writing to register location 8: 
#   opcode = 5 (MULT)
#   operand_a = -2
#   operand_b = 13
# 
# Writing to register location 9: 
#   opcode = 2 (PASSB)
#   operand_a = -3
#   operand_b = 5
# 
# Writing to register location 10: 
#   opcode = 6 (DIV)
#   operand_a = -11
#   operand_b = 10
# 
# Writing to register location 11: 
#   opcode = 0 (ZERO)
#   operand_a = -6
#   operand_b = 14
# 
# Writing to register location 12: 
#   opcode = 5 (MULT)
#   operand_a = -2
#   operand_b = 0
# 
# Writing to register location 13: 
#   opcode = 6 (DIV)
#   operand_a = 0
#   operand_b = 5
# 
# Writing to register location 14: 
#   opcode = 0 (ZERO)
#   operand_a = 5
#   operand_b = 14
# 
# Writing to register location 15: 
#   opcode = 3 (ADD)
#   operand_a = -2
#   operand_b = 8
# 
# Writing to register location 16: 
#   opcode = 7 (MOD)
#   operand_a = -8
#   operand_b = 3
# 
# Writing to register location 17: 
#   opcode = 5 (MULT)
#   operand_a = -13
#   operand_b = 7
# 
# 
# Reading back the same register locations written...
# Read from register location 0: 
#   opcode = 2 (PASSB)
#   operand_a = -3
#   operand_b = 14
# 
#   rezultat = 0
# 
# operand a diferit cu ce s-a generat
# operand_a = -10, operand_a = -3
# operand b diferit cu ce s-a generat
# operand_b = 9, operand_b = 14
# Rezultatul calculat: 0
# rezultatul stocat : -90 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 1: 
#   opcode = 3 (ADD)
#   operand_a = -2
#   operand_b = 2
# 
#   rezultat = 14
# 
# Rezultate asemanatoare
# Rezultatul calculat: x
# Rezultatul stocat: x
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 2: 
#   opcode = 6 (DIV)
#   operand_a = -14
#   operand_b = 11
# 
#   rezultat = 0
# 
# operand a diferit cu ce s-a generat
# operand_a = 10, operand_a = -14
# operand b diferit cu ce s-a generat
# operand_b = 13, operand_b = 11
# Rezultatul calculat: 0
# rezultatul stocat : 130 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 3: 
#   opcode = 4 (SUB)
#   operand_a = -5
#   operand_b = 6
# 
#   rezultat = -1
# 
# operand a diferit cu ce s-a generat
# operand_a = 5, operand_a = -5
# operand b diferit cu ce s-a generat
# operand_b = 14, operand_b = 6
# Rezultatul calculat: 0
# rezultatul stocat : 70 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 4: 
#   opcode = 7 (MOD)
#   operand_a = 6
#   operand_b = 4
# 
#   rezultat = -11
# 
# Rezultatul calculat: 0
# rezultatul stocat : x 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 5: 
#   opcode = 0 (ZERO)
#   operand_a = 4
#   operand_b = 7
# 
#   rezultat = 2
# 
# operand a diferit cu ce s-a generat
# operand_a = -8, operand_a = 4
# operand b diferit cu ce s-a generat
# operand_b = 3, operand_b = 7
# Rezultatul calculat: 0
# rezultatul stocat : -24 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 6: 
#   opcode = 6 (DIV)
#   operand_a = 7
#   operand_b = 8
# 
#   rezultat = 0
# 
# Rezultate asemanatoare
# Rezultatul calculat: x
# Rezultatul stocat: x
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 7: 
#   opcode = 5 (MULT)
#   operand_a = 8
#   operand_b = 14
# 
#   rezultat = 0
# 
# operand a diferit cu ce s-a generat
# operand_a = 0, operand_a = 8
# operand b diferit cu ce s-a generat
# operand_b = 1, operand_b = 14
# Rezultate asemanatoare
# Rezultatul calculat: 0
# Rezultatul stocat: 0
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 8: 
#   opcode = 5 (MULT)
#   operand_a = -2
#   operand_b = 13
# 
#   rezultat = 112
# 
# operand a diferit cu ce s-a generat
# operand_a = 6, operand_a = -2
# operand b diferit cu ce s-a generat
# operand_b = 4, operand_b = 13
# Rezultatul calculat: 0
# rezultatul stocat : 24 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 9: 
#   opcode = 2 (PASSB)
#   operand_a = -3
#   operand_b = 5
# 
#   rezultat = -26
# 
# operand a diferit cu ce s-a generat
# operand_a = 10, operand_a = -3
# operand b diferit cu ce s-a generat
# operand_b = 6, operand_b = 5
# Rezultatul calculat: 0
# rezultatul stocat : 60 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 10: 
#   opcode = 6 (DIV)
#   operand_a = -11
#   operand_b = 10
# 
#   rezultat = 5
# 
# Rezultate asemanatoare
# Rezultatul calculat: x
# Rezultatul stocat: x
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 11: 
#   opcode = 0 (ZERO)
#   operand_a = -6
#   operand_b = 14
# 
#   rezultat = -1
# 
# operand a diferit cu ce s-a generat
# operand_a = -3, operand_a = -6
# operand b diferit cu ce s-a generat
# operand_b = 14, operand_b = 14
# Rezultatul calculat: 0
# rezultatul stocat : -42 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 12: 
#   opcode = 5 (MULT)
#   operand_a = -2
#   operand_b = 0
# 
#   rezultat = 0
# 
# operand a diferit cu ce s-a generat
# operand_a = -3, operand_a = -2
# operand b diferit cu ce s-a generat
# operand_b = 13, operand_b = 0
# Rezultatul calculat: 0
# rezultatul stocat : -39 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 13: 
#   opcode = 6 (DIV)
#   operand_a = 0
#   operand_b = 5
# 
#   rezultat = 0
# 
# operand a diferit cu ce s-a generat
# operand_a = 7, operand_a = 0
# operand b diferit cu ce s-a generat
# operand_b = 8, operand_b = 5
# Rezultatul calculat: 0
# rezultatul stocat : 56 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 14: 
#   opcode = 0 (ZERO)
#   operand_a = 5
#   operand_b = 14
# 
#   rezultat = 0
# 
# Rezultate asemanatoare
# Rezultatul calculat: x
# Rezultatul stocat: x
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 15: 
#   opcode = 3 (ADD)
#   operand_a = -2
#   operand_b = 8
# 
#   rezultat = 0
# 
# operand a diferit cu ce s-a generat
# operand_a = 1, operand_a = -2
# operand b diferit cu ce s-a generat
# operand_b = 14, operand_b = 8
# Rezultatul calculat: 0
# rezultatul stocat : 14 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 16: 
#   opcode = 7 (MOD)
#   operand_a = -8
#   operand_b = 3
# 
#   rezultat = 6
# 
# operand a diferit cu ce s-a generat
# operand_a = -11, operand_a = -8
# operand b diferit cu ce s-a generat
# operand_b = 10, operand_b = 3
# Rezultatul calculat: 0
# rezultatul stocat : -110 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 17: 
#   opcode = 5 (MULT)
#   operand_a = -13
#   operand_b = 7
# 
#   rezultat = -2
# 
# operand a diferit cu ce s-a generat
# operand_a = 9, operand_a = -13
# operand b diferit cu ce s-a generat
# operand_b = 9, operand_b = 7
# Rezultatul calculat: 0
# rezultatul stocat : 81 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 18: 
#   opcode = 5 (MULT)
#   operand_a = -9
#   operand_b = 7
# 
#   rezultat = 1
# 
# operand a diferit cu ce s-a generat
# operand_a = -2, operand_a = -9
# operand b diferit cu ce s-a generat
# operand_b = 1, operand_b = 7
# Rezultatul calculat: 0
# rezultatul stocat : -2 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 19: 
#   opcode = 4 (SUB)
#   operand_a = -9
#   operand_b = 5
# 
#   rezultat = -63
# 
# operand a diferit cu ce s-a generat
# operand_a = 5, operand_a = -9
# operand b diferit cu ce s-a generat
# operand_b = 12, operand_b = 5
# Rezultatul calculat: 0
# rezultatul stocat : 60 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 20: 
#   opcode = 3 (ADD)
#   operand_a = 5
#   operand_b = 12
# 
#   rezultat = -14
# 
# operand a diferit cu ce s-a generat
# operand_a = -14, operand_a = 5
# operand b diferit cu ce s-a generat
# operand_b = 11, operand_b = 12
# Rezultatul calculat: 0
# rezultatul stocat : -154 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 21: 
#   opcode = 3 (ADD)
#   operand_a = 12
#   operand_b = 3
# 
#   rezultat = 17
# 
# operand a diferit cu ce s-a generat
# operand_a = -6, operand_a = 12
# operand b diferit cu ce s-a generat
# operand_b = 14, operand_b = 3
# Rezultatul calculat: 0
# rezultatul stocat : -84 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 22: 
#   opcode = 6 (DIV)
#   operand_a = -13
#   operand_b = 3
# 
#   rezultat = 15
# 
# operand a diferit cu ce s-a generat
# operand_a = -2, operand_a = -13
# operand b diferit cu ce s-a generat
# operand_b = 2, operand_b = 3
# Rezultatul calculat: 0
# rezultatul stocat : -4 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 23: 
#   opcode = 3 (ADD)
#   operand_a = -13
#   operand_b = 14
# 
#   rezultat = -4
# 
# operand a diferit cu ce s-a generat
# operand_a = -2, operand_a = -13
# operand b diferit cu ce s-a generat
# operand_b = 8, operand_b = 14
# Rezultatul calculat: 0
# rezultatul stocat : -16 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 24: 
#   opcode = 5 (MULT)
#   operand_a = 14
#   operand_b = 11
# 
#   rezultat = 1
# 
# operand a diferit cu ce s-a generat
# operand_a = 0, operand_a = 14
# operand b diferit cu ce s-a generat
# operand_b = 5, operand_b = 11
# Rezultate asemanatoare
# Rezultatul calculat: 0
# Rezultatul stocat: 0
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 25: 
#   opcode = 5 (MULT)
#   operand_a = 11
#   operand_b = 13
# 
#   rezultat = 154
# 
# Rezultate asemanatoare
# Rezultatul calculat: x
# Rezultatul stocat: x
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 26: 
#   opcode = 7 (MOD)
#   operand_a = -3
#   operand_b = 13
# 
#   rezultat = 143
# 
# operand a diferit cu ce s-a generat
# operand_a = -2, operand_a = -3
# operand b diferit cu ce s-a generat
# operand_b = 13, operand_b = 13
# Rezultatul calculat: 0
# rezultatul stocat : -26 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 27: 
#   opcode = 4 (SUB)
#   operand_a = -3
#   operand_b = 7
# 
#   rezultat = -3
# 
# operand b diferit cu ce s-a generat
# operand_b = 3, operand_b = 7
# Rezultatul calculat: 0
# rezultatul stocat : -39 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 28: 
#   opcode = 0 (ZERO)
#   operand_a = -9
#   operand_b = 12
# 
#   rezultat = -10
# 
# Rezultate asemanatoare
# Rezultatul calculat: x
# Rezultatul stocat: x
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 29: 
#   opcode = 2 (PASSB)
#   operand_a = 12
#   operand_b = 8
# 
#   rezultat = 0
# 
# operand a diferit cu ce s-a generat
# operand_a = 12, operand_a = 12
# operand b diferit cu ce s-a generat
# operand_b = 8, operand_b = 8
# Rezultatul calculat: 0
# rezultatul stocat : 96 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 30: 
#   opcode = 5 (MULT)
#   operand_a = -8
#   operand_b = 10
# 
#   rezultat = 8
# 
# operand a diferit cu ce s-a generat
# operand_a = -2, operand_a = -8
# operand b diferit cu ce s-a generat
# operand_b = 0, operand_b = 10
# Rezultate asemanatoare
# Rezultatul calculat: 0
# Rezultatul stocat: 0
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 31: 
#   opcode = 6 (DIV)
#   operand_a = 10
#   operand_b = 13
# 
#   rezultat = -80
# 
# Rezultate asemanatoare
# Rezultatul calculat: x
# Rezultatul stocat: x
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# Read from register location 0: 
#   opcode = 2 (PASSB)
#   operand_a = -3
#   operand_b = 14
# 
#   rezultat = 0
# 
# operand a diferit cu ce s-a generat
# operand_a = -10, operand_a = -3
# operand b diferit cu ce s-a generat
# operand_b = 9, operand_b = 14
# Rezultatul calculat: 0
# rezultatul stocat : -90 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET).  YOU  *******
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_test.sv(105)
#    Time: 1526 ns  Iteration: 1  Instance: /top/test
# End time: 08:55:19 on Apr 10,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
